package com.skyjetairlines.model.entity;

import java.math.BigDecimal;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Sep 16 17:18:02 IST 2023
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BookingEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        BookingId,
        CustomerId,
        BookingDate,
        TotalAmount,
        Customer,
        Ticket;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int BOOKINGID = AttributesEnum.BookingId.index();
    public static final int CUSTOMERID = AttributesEnum.CustomerId.index();
    public static final int BOOKINGDATE = AttributesEnum.BookingDate.index();
    public static final int TOTALAMOUNT = AttributesEnum.TotalAmount.index();
    public static final int CUSTOMER = AttributesEnum.Customer.index();
    public static final int TICKET = AttributesEnum.Ticket.index();

    /**
     * This is the default constructor (do not remove).
     */
    public BookingEOImpl() {
    }

    /**
     * Gets the attribute value for BookingId, using the alias name BookingId.
     * @return the value of BookingId
     */
    public DBSequence getBookingId() {
        return (DBSequence) getAttributeInternal(BOOKINGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BookingId.
     * @param value value to set the BookingId
     */
    public void setBookingId(DBSequence value) {
        setAttributeInternal(BOOKINGID, value);
    }

    /**
     * Gets the attribute value for CustomerId, using the alias name CustomerId.
     * @return the value of CustomerId
     */
    public BigDecimal getCustomerId() {
        return (BigDecimal) getAttributeInternal(CUSTOMERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CustomerId.
     * @param value value to set the CustomerId
     */
    public void setCustomerId(BigDecimal value) {
        setAttributeInternal(CUSTOMERID, value);
    }

    /**
     * Gets the attribute value for BookingDate, using the alias name BookingDate.
     * @return the value of BookingDate
     */
    public Date getBookingDate() {
        return (Date) getAttributeInternal(BOOKINGDATE);
    }

    /**
     * Gets the attribute value for TotalAmount, using the alias name TotalAmount.
     * @return the value of TotalAmount
     */
    public BigDecimal getTotalAmount() {
        return (BigDecimal) getAttributeInternal(TOTALAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotalAmount.
     * @param value value to set the TotalAmount
     */
    public void setTotalAmount(BigDecimal value) {
        setAttributeInternal(TOTALAMOUNT, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getCustomer() {
        return (EntityImpl) getAttributeInternal(CUSTOMER);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setCustomer(EntityImpl value) {
        setAttributeInternal(CUSTOMER, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTicket() {
        return (RowIterator) getAttributeInternal(TICKET);
    }

    /**
     * @param bookingId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence bookingId) {
        return new Key(new Object[] { bookingId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.skyjetairlines.model.entity.BookingEO");
    }
    
    RowSet newTicketsBeforePost = null;
    public void postChanges(TransactionEvent transactionEvent) {
        if(getPostState() == STATUS_NEW) {
            newTicketsBeforePost = (RowSet)getTicket();
        }
        super.postChanges(transactionEvent);
    }
    
    protected void refreshFKInNewContainees() {
       if (newTicketsBeforePost != null) {
          Number newBookingId = getBookingId().getSequenceNumber();
          while (newTicketsBeforePost.hasNext()){
             TicketEOImpl ticket =
                (TicketEOImpl)newTicketsBeforePost.next();
              ticket.setBookingId(newBookingId.bigDecimalValue());
          }
       }  
    }
}

